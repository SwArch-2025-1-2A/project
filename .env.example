# --------------------------------- #
# |        API_GATEWAY            | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the API_GATEWAY SERVICE
mu_ag_HOSTNAME="mu_ag"

## Port to be accessed from HOST machine
mu_ag_EXTERNAL_PORT=4000

## Port that the API GATEWAY service listens to
mu_ag_INTERNAL_PORT=4000

# --------------------------------- #
# |        AUTH MICROSERVICE      | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the DATABASE SERVICE
mu_auth_ms_HOSTNAME="mu_auth_ms"

## Key UTF-8 encoded to sign JWTs with
mu_auth_ms_JWT_SECRET="MeetUN_JWT_secret"

## Expiration time for JWT in seconds
mu_auth_ms_USER_TOKEN_EXPIRATION_TIME="3600"

## port that the AUTH service listens to
mu_auth_ms_INTERNAL_PORT=5000

## Port to be accessed from HOST machine
mu_auth_ms_EXTERNAL_PORT=5000


# --------------------------------- #
# |        AUTH DATABASE          | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the DATABASE SERVICE
mu_auth_db_HOSTNAME="mu_auth_db"

## port that the DATABASE SERVICE listens to
mu_auth_db_INTERNAL_PORT=5432

## Database user
mu_auth_db_USER="postgres"

## Database password
mu_auth_db_PASSWORD="meetUN"

## Name for the database
mu_auth_db_DB="auth"


# --------------------------------- #
# |       AUTH WHITELIST          | #
# --------------------------------- #
## hostname for which OTHER SERVICES
## can find the WHITELIST SERVICE
mu_whitelist_db_HOSTNAME="mu_whitelist_db"

## port that the WHITELIST SERVICE listens to
mu_whitelist_db_INTERNAL_PORT=6379
# --------------------------------- #
# |           GROUPS MS           | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the GROUPS microservice
mu_groups_ms_HOSTNAME="mu_groups_ms"

## port that the GROUPS MICROSERVICE listens to
mu_groups_ms_INTERNAL_PORT=8008

## Port to be accessed from HOST machine
mu_groups_ms_EXTERNAL_PORT=8008

## Mode that the service runs on. One of:
##  "debug", "release" or "test"
mu_groups_ms_MODE="release"

# --------------------------------- #
# |        GROUPS DATABASE        | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the GROUPS DATABASE SERVICE
mu_groups_db_HOSTNAME="mu_groups_db"

## port that the GROUPS DATABASE SERVICE listens to
mu_groups_db_INTERNAL_PORT=5432

## Database user
mu_groups_db_USER="postgres"

## Database password
mu_groups_db_PASSWORD="meetUN"

## Name for the database
mu_groups_db_DB="meetun"

# ------------------------------------ #
# |        USERS MICROSERVICE        | #
# ------------------------------------ #
## hostname for which OTHER SERVICES
## can find the USERS MICROSERVICE
mu_users_ms_HOSTNAME="mu_users_ms"

## port that the USERS MICROSERVICE listens to
## It can be the same as the groups microservice because
## the hostnames are different
mu_users_ms_INTERNAL_PORT=8008

## Port to be accessed from HOST machine
## It has to be different from the groups microservice
## to avoid conflicts
mu_users_ms_EXTERNAL_PORT=8009

## Mode that the service runs on. One of:
##  "debug", "release" or "test"
mu_users_ms_MODE="release"

# --------------------------------- #
# |        USERS DATABASE        | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the USERS DATABASE SERVICE
mu_users_db_HOSTNAME="mu_users_db"

## port that the USERS DATABASE SERVICE listens to
mu_users_db_INTERNAL_PORT=5432

## Database user
mu_users_db_USER="postgres"

## Database password
mu_users_db_PASSWORD="meetUN"

## Name for the database
mu_users_db_DB="users"

# --------------------------------- #
# |        BULK MICROSERVICE      | #
# --------------------------------- #
# Celery broker URL (Can be derived if not specified)
# mu_bulk_CELERY_BROKER_URL=amqp://meetUN:passMeetUN@mu_bulk_bkr:5672/BulkMeetUN

# Celery result backend (Can be derived if not specified)
# mu_bulk_CELERY_RESULT_BACKEND=redis://mu_bulk_rb:6379/0

## hostname for which OTHER SERVICES
## can find this service
mu_bulk_ms_HOSTNAME="mu_bulk_ms"

## port that the BULK MS service listens to
mu_bulk_ms_INTERNAL_PORT=8000

## port that the BULK MS service listens to
mu_bulk_ms_EXTERNAL_PORT=8000


# --------------------------------- #
# |        FLOWER DASHBOARD       | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find this service
mu_bulk_dashboard_HOSTNAME="mu_bulk_dashboard"

## port that the DASHBOARD listens to
mu_bulk_dashboard_INTERNAL_PORT=5555

## Port to be accessed from HOST machine
mu_bulk_dashboard_EXTERNAL_PORT=5555


# --------------------------------- #
# |        RESULT BACKEND         | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find this service
mu_bulk_rb_HOSTNAME="mu_bulk_rb"

## port that the RESULT BACKEND listens to
mu_bulk_rb_INTERNAL_PORT=6379


# --------------------------------- #
# |             BROKER            | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find this service
mu_bulk_bkr_HOSTNAME="mu_bulk_bkr"

## port that the BROKER listens to
mu_bulk_bkr_INTERNAL_PORT=5672

## Broker user
mu_bulk_bkr_USER="meetUN"

## Broker password
mu_bulk_bkr_PASS="passMeetUN"

## Virtual host
mu_bulk_bkr_VHOST="BulkMeetUN"

## (FIXED VALUE)
## port that the MANAGEMENT PLUGIN listens to
mu_bulk_bkr_MANAGEMENT_INTERNAL_PORT=15672


# ----------------------------------------------------------- #
# |              CATEGORIES MICROSERVICE                    | #
# ----------------------------------------------------------- #

## hostname for which OTHER SERVICES
## can find the Categories Microservice
mu_categories_ms_HOSTNAME="mu_categories_ms"

## port that the Categories Microservice listens to
mu_categories_ms_INTERNAL_PORT=8001

## Port to be accessed from HOST machine
mu_categories_ms_EXTERNAL_PORT=8001

# ----------------------------------------------------------- #
# |              CATEGORIES DATABASE                        | #
# ----------------------------------------------------------- #

## hostname for which OTHER SERVICES
## can find the Categories Database SERVICE
mu_categories_db_HOSTNAME="mu_categories_db"

## port that the Categories Database SERVICE listens to
mu_categories_db_INTERNAL_PORT=5432

## Database user
mu_categories_db_USER="postgres"

## Database password
mu_categories_db_PASSWORD="meetUN"

## Name for the database
mu_categories_db_DB="categories"

# --------------------------------- #
# |           EVENTS MS           | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the EVENTS microservice
mu_events_ms_HOSTNAME="mu_events_ms"

## port that the EVENTS MICROSERVICE listens to
mu_events_ms_INTERNAL_PORT=8080

## Port to be accessed from the HOST machine
mu_events_ms_EXTERNAL_PORT=8080

## When set to Release it doesn't create the Swagger endpoint
## When set to Development it does
mu_events_ms_BUILD_CONFIGURATION=Release

# --------------------------------- #
# |        EVENTS DATABASE        | #
# --------------------------------- #

## hostname for which OTHER SERVICES
## can find the EVENTS DATABASE SERVICE
mu_events_db_HOSTNAME="mu_events_db"

## port that the EVENTS DATABASE SERVICE listens to
mu_events_db_INTERNAL_PORT=5432

## Database user
mu_events_db_USER="postgres"

## Database password
mu_events_db_PASSWORD="meetUN"

## Name for the database
mu_events_db_DB="events"

# --------------------------------- #
# |        FRONTEND               | #
# --------------------------------- #

mu_fe_HOSTNAME="mu_fe"          # hostname for which OTHER SERVICES can find the FRONTEND service
mu_fe_INTERNAL_PORT=3000        # port that the FRONTEND service listens to
mu_fe_EXPOSED_PORT=3000         # Port to be accessed from HOST machine
mu_fe_MODE="prod"               # Mode that the service runs on. Options: "prod", "dev"

# These environment variables are needed too:
# If you are running the whole project, this variables will not be needed,
# as they will be automatically configured by the docker compose of the whole project.
# mu_ag_HOSTNAME="localhost"    # Choose localhost in case you are running this service isolated
# mu_ag_INTERNAL_PORT=4000      # Port that the API Gateway Services listens to
